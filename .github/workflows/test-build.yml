name: Test Build

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build for'
        required: true
        type: choice
        options:
          - windows
          - linux
          - all
        default: 'windows'

jobs:
  test-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            build_script: build:linux
            condition: ${{ github.event.inputs.platform == 'linux' || github.event.inputs.platform == 'all' }}
          - os: windows-latest
            platform: windows
            build_script: build:win
            condition: ${{ github.event.inputs.platform == 'windows' || github.event.inputs.platform == 'all' }}
    
    if: ${{ matrix.condition }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # Linux 特定依赖
      - name: Install Linux Dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libxss1 libasound2-dev

      - name: Install Dependencies
        run: npm ci

      # 清理可能的文件锁定问题
      - name: Clean Build Directory
        run: |
          if [ -d "release" ]; then
            rm -rf release
          fi
        shell: bash

      - name: Build Application (with retry)
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_wait_seconds: 30
          command: npm run ${{ matrix.build_script }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # 设置 Electron 镜像以避免网络问题
          ELECTRON_MIRROR: https://npmmirror.com/mirrors/electron/

      - name: Verify Build Output
        run: |
          echo "=== Build Output Verification ==="
          if [ -d "release" ]; then
            echo "✅ Release directory exists"
            find release -type f -name "*.exe" -o -name "*.AppImage" -o -name "*.dmg" | head -10
          else
            echo "❌ Release directory not found"
            exit 1
          fi
        shell: bash

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-build-${{ matrix.platform }}
          path: release/
          retention-days: 1 